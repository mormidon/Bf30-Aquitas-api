// <auto-generated />
using System;
using Catalyte.Apparel.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Catalyte.Apparel.Data.Migrations
{
    [DbContext(typeof(ApparelCtx))]
    [Migration("20211007174231_sku")]
    partial class sku
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Catalyte.Apparel.Data.Model.LineItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("ProductID");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("integer")
                        .HasColumnName("PurchaseID");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseId");

                    b.ToTable("LineItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2021, 10, 7, 17, 42, 31, 7, DateTimeKind.Utc).AddTicks(1098),
                            DateModified = new DateTime(2021, 10, 7, 17, 42, 31, 7, DateTimeKind.Utc).AddTicks(1102),
                            ProductId = 1,
                            PurchaseId = 1,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("Catalyte.Apparel.Data.Model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Demographic")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("GlobalProductCode")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PrimaryColorCode")
                        .HasColumnType("text");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SecondaryColorCode")
                        .HasColumnType("text");

                    b.Property<string>("Sku")
                        .HasColumnType("text");

                    b.Property<string>("StyleNumber")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = false,
                            Category = "Baseball",
                            DateCreated = new DateTime(2021, 10, 7, 17, 42, 31, 6, DateTimeKind.Utc).AddTicks(1722),
                            DateModified = new DateTime(2021, 10, 7, 17, 42, 31, 6, DateTimeKind.Utc).AddTicks(2044),
                            Demographic = "Men",
                            GlobalProductCode = "po-AEOHPRU",
                            ReleaseDate = new DateTime(2021, 10, 7, 13, 42, 31, 4, DateTimeKind.Local).AddTicks(3406),
                            Sku = "SHL-100-Blue",
                            StyleNumber = "scEDMDI",
                            Type = "Pant"
                        },
                        new
                        {
                            Id = 2,
                            Active = false,
                            Category = "Hockey",
                            DateCreated = new DateTime(2021, 10, 7, 17, 42, 31, 6, DateTimeKind.Utc).AddTicks(2399),
                            DateModified = new DateTime(2021, 10, 7, 17, 42, 31, 6, DateTimeKind.Utc).AddTicks(2400),
                            Demographic = "Women",
                            GlobalProductCode = "po-BYLCRRR",
                            ReleaseDate = new DateTime(2021, 10, 7, 13, 42, 31, 6, DateTimeKind.Local).AddTicks(2378),
                            Sku = "SHL-100-Red",
                            StyleNumber = "scNFSFW",
                            Type = "Pant"
                        },
                        new
                        {
                            Id = 3,
                            Active = false,
                            Category = "Soccer",
                            DateCreated = new DateTime(2021, 10, 7, 17, 42, 31, 6, DateTimeKind.Utc).AddTicks(2410),
                            DateModified = new DateTime(2021, 10, 7, 17, 42, 31, 6, DateTimeKind.Utc).AddTicks(2411),
                            Demographic = "Women",
                            GlobalProductCode = "po-XNQIMLJ",
                            ReleaseDate = new DateTime(2021, 10, 7, 13, 42, 31, 6, DateTimeKind.Local).AddTicks(2407),
                            Sku = "HOV-AB-KJ",
                            StyleNumber = "scGQBDI",
                            Type = "Pant"
                        },
                        new
                        {
                            Id = 4,
                            Active = false,
                            Category = "Football",
                            DateCreated = new DateTime(2021, 10, 7, 17, 42, 31, 6, DateTimeKind.Utc).AddTicks(2418),
                            DateModified = new DateTime(2021, 10, 7, 17, 42, 31, 6, DateTimeKind.Utc).AddTicks(2419),
                            Demographic = "Women",
                            GlobalProductCode = "po-TRPDZRH",
                            ReleaseDate = new DateTime(2021, 10, 7, 13, 42, 31, 6, DateTimeKind.Local).AddTicks(2416),
                            Sku = "TLX-DRESS-SM",
                            StyleNumber = "scZCTDA",
                            Type = "Pant"
                        },
                        new
                        {
                            Id = 5,
                            Active = false,
                            Category = "Baseball",
                            DateCreated = new DateTime(2021, 10, 7, 17, 42, 31, 6, DateTimeKind.Utc).AddTicks(2462),
                            DateModified = new DateTime(2021, 10, 7, 17, 42, 31, 6, DateTimeKind.Utc).AddTicks(2463),
                            Demographic = "Women",
                            GlobalProductCode = "po-ZVCSNDG",
                            ReleaseDate = new DateTime(2021, 10, 7, 13, 42, 31, 6, DateTimeKind.Local).AddTicks(2460),
                            Sku = "ATK-34-RD",
                            StyleNumber = "scPVUVY",
                            Type = "Pant"
                        },
                        new
                        {
                            Id = 6,
                            Active = false,
                            Category = "Running",
                            DateCreated = new DateTime(2021, 10, 7, 17, 42, 31, 6, DateTimeKind.Utc).AddTicks(2472),
                            DateModified = new DateTime(2021, 10, 7, 17, 42, 31, 6, DateTimeKind.Utc).AddTicks(2473),
                            Demographic = "Women",
                            GlobalProductCode = "po-HKZIFAT",
                            ReleaseDate = new DateTime(2021, 10, 7, 13, 42, 31, 6, DateTimeKind.Local).AddTicks(2470),
                            Sku = "TRE-33-LRG",
                            StyleNumber = "scNDBXM",
                            Type = "Pant"
                        },
                        new
                        {
                            Id = 7,
                            Active = false,
                            Category = "Hockey",
                            DateCreated = new DateTime(2021, 10, 7, 17, 42, 31, 6, DateTimeKind.Utc).AddTicks(2479),
                            DateModified = new DateTime(2021, 10, 7, 17, 42, 31, 6, DateTimeKind.Utc).AddTicks(2480),
                            Demographic = "Women",
                            GlobalProductCode = "po-KXELTWH",
                            ReleaseDate = new DateTime(2021, 10, 7, 13, 42, 31, 6, DateTimeKind.Local).AddTicks(2477),
                            Sku = "TRE-30-SM",
                            StyleNumber = "scUZKVI",
                            Type = "Pant"
                        });
                });

            modelBuilder.Entity("Catalyte.Apparel.Data.Model.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BillingCity")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("BillingEmail")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("BillingPhone")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("BillingState")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<string>("BillingStreet")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("BillingStreet2")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("BillingZip")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("CVV")
                        .HasColumnType("integer");

                    b.Property<string>("CardHolder")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeliveryCity")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("DeliveryFirstName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("DeliveryLastName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("DeliveryState")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<string>("DeliveryStreet")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("DeliveryStreet2")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("DeliveryZip")
                        .HasMaxLength(10)
                        .HasColumnType("integer");

                    b.Property<string>("Expiration")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Purchases");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BillingCity = "Atlanta",
                            BillingEmail = "customer@home.com",
                            BillingPhone = "(714) 345-8765",
                            BillingState = "GA",
                            BillingStreet = "123 Main",
                            BillingStreet2 = "Apt A",
                            BillingZip = "31675",
                            CVV = 456,
                            CardHolder = "Max Perkins",
                            CardNumber = "1435678998761234",
                            DateCreated = new DateTime(2021, 10, 7, 17, 42, 31, 7, DateTimeKind.Utc).AddTicks(4798),
                            DateModified = new DateTime(2021, 10, 7, 17, 42, 31, 7, DateTimeKind.Utc).AddTicks(4801),
                            DeliveryCity = "Birmingham",
                            DeliveryFirstName = "Max",
                            DeliveryLastName = "Space",
                            DeliveryState = "AL",
                            DeliveryStreet = "123 Hickley",
                            DeliveryZip = 43690,
                            Expiration = "11/21",
                            OrderDate = new DateTime(2021, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Catalyte.Apparel.Data.Model.LineItem", b =>
                {
                    b.HasOne("Catalyte.Apparel.Data.Model.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Catalyte.Apparel.Data.Model.Purchase", "Purchase")
                        .WithMany("LineItems")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("Catalyte.Apparel.Data.Model.Purchase", b =>
                {
                    b.Navigation("LineItems");
                });
#pragma warning restore 612, 618
        }
    }
}
