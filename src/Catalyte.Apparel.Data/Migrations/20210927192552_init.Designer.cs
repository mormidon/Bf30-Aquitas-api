// <auto-generated />
using System;
using Catalyte.Apparel.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Catalyte.Apparel.Data.Migrations
{
    [DbContext(typeof(ApparelCtx))]
    [Migration("20210927192552_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Catalyte.Apparel.Data.Model.BillingAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BillingCity")
                        .HasColumnType("text");

                    b.Property<string>("BillingState")
                        .HasColumnType("text");

                    b.Property<string>("BillingStreet")
                        .HasColumnType("text");

                    b.Property<string>("BillingStreet2")
                        .HasColumnType("text");

                    b.Property<string>("BillingZip")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BillingAddress");
                });

            modelBuilder.Entity("Catalyte.Apparel.Data.Model.DeliveryAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeliveryCity")
                        .HasColumnType("text");

                    b.Property<string>("DeliveryState")
                        .HasColumnType("text");

                    b.Property<string>("DeliveryStreet")
                        .HasColumnType("text");

                    b.Property<string>("DeliveryStreet2")
                        .HasColumnType("text");

                    b.Property<int>("DeliveryZip")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DeliveryAddress");
                });

            modelBuilder.Entity("Catalyte.Apparel.Data.Model.LineItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("ProductID");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("integer")
                        .HasColumnName("PurchaseID");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseId");

                    b.ToTable("LineItems");
                });

            modelBuilder.Entity("Catalyte.Apparel.Data.Model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Demographic")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("GlobalProductCode")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PrimaryColorCode")
                        .HasColumnType("text");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SecondaryColorCode")
                        .HasColumnType("text");

                    b.Property<string>("StyleNumber")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = false,
                            Category = "Football",
                            DateCreated = new DateTime(2021, 9, 27, 19, 25, 52, 134, DateTimeKind.Utc).AddTicks(594),
                            DateModified = new DateTime(2021, 9, 27, 19, 25, 52, 134, DateTimeKind.Utc).AddTicks(923),
                            Demographic = "Men",
                            GlobalProductCode = "po-YOJJZDP",
                            ReleaseDate = new DateTime(2021, 9, 27, 15, 25, 52, 131, DateTimeKind.Local).AddTicks(8710),
                            StyleNumber = "scLEGUY",
                            Type = "Pant"
                        },
                        new
                        {
                            Id = 2,
                            Active = false,
                            Category = "Boxing",
                            DateCreated = new DateTime(2021, 9, 27, 19, 25, 52, 134, DateTimeKind.Utc).AddTicks(1260),
                            DateModified = new DateTime(2021, 9, 27, 19, 25, 52, 134, DateTimeKind.Utc).AddTicks(1261),
                            Demographic = "Women",
                            GlobalProductCode = "po-EOVXSOH",
                            ReleaseDate = new DateTime(2021, 9, 27, 15, 25, 52, 134, DateTimeKind.Local).AddTicks(1237),
                            StyleNumber = "scBGVUZ",
                            Type = "Pant"
                        },
                        new
                        {
                            Id = 3,
                            Active = false,
                            Category = "Basketball",
                            DateCreated = new DateTime(2021, 9, 27, 19, 25, 52, 134, DateTimeKind.Utc).AddTicks(1270),
                            DateModified = new DateTime(2021, 9, 27, 19, 25, 52, 134, DateTimeKind.Utc).AddTicks(1270),
                            Demographic = "Men",
                            GlobalProductCode = "po-NDSSVMC",
                            ReleaseDate = new DateTime(2021, 9, 27, 15, 25, 52, 134, DateTimeKind.Local).AddTicks(1266),
                            StyleNumber = "scMBCEC",
                            Type = "Pant"
                        },
                        new
                        {
                            Id = 4,
                            Active = false,
                            Category = "Running",
                            DateCreated = new DateTime(2021, 9, 27, 19, 25, 52, 134, DateTimeKind.Utc).AddTicks(1277),
                            DateModified = new DateTime(2021, 9, 27, 19, 25, 52, 134, DateTimeKind.Utc).AddTicks(1278),
                            Demographic = "Men",
                            GlobalProductCode = "po-SCGOOXO",
                            ReleaseDate = new DateTime(2021, 9, 27, 15, 25, 52, 134, DateTimeKind.Local).AddTicks(1275),
                            StyleNumber = "scNRVVY",
                            Type = "Pant"
                        },
                        new
                        {
                            Id = 5,
                            Active = false,
                            Category = "Boxing",
                            DateCreated = new DateTime(2021, 9, 27, 19, 25, 52, 134, DateTimeKind.Utc).AddTicks(1285),
                            DateModified = new DateTime(2021, 9, 27, 19, 25, 52, 134, DateTimeKind.Utc).AddTicks(1286),
                            Demographic = "Women",
                            GlobalProductCode = "po-HNOAWEX",
                            ReleaseDate = new DateTime(2021, 9, 27, 15, 25, 52, 134, DateTimeKind.Local).AddTicks(1283),
                            StyleNumber = "scANBDN",
                            Type = "Pant"
                        },
                        new
                        {
                            Id = 6,
                            Active = false,
                            Category = "Football",
                            DateCreated = new DateTime(2021, 9, 27, 19, 25, 52, 134, DateTimeKind.Utc).AddTicks(1295),
                            DateModified = new DateTime(2021, 9, 27, 19, 25, 52, 134, DateTimeKind.Utc).AddTicks(1296),
                            Demographic = "Women",
                            GlobalProductCode = "po-MSTPYZI",
                            ReleaseDate = new DateTime(2021, 9, 27, 15, 25, 52, 134, DateTimeKind.Local).AddTicks(1293),
                            StyleNumber = "scDPGLJ",
                            Type = "Pant"
                        },
                        new
                        {
                            Id = 7,
                            Active = false,
                            Category = "Boxing",
                            DateCreated = new DateTime(2021, 9, 27, 19, 25, 52, 134, DateTimeKind.Utc).AddTicks(1303),
                            DateModified = new DateTime(2021, 9, 27, 19, 25, 52, 134, DateTimeKind.Utc).AddTicks(1304),
                            Demographic = "Men",
                            GlobalProductCode = "po-MXXWNFE",
                            ReleaseDate = new DateTime(2021, 9, 27, 15, 25, 52, 134, DateTimeKind.Local).AddTicks(1301),
                            StyleNumber = "scOOEGM",
                            Type = "Pant"
                        });
                });

            modelBuilder.Entity("Catalyte.Apparel.Data.Model.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("BillingAddressId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DeliveryAddressId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BillingAddressId");

                    b.HasIndex("DeliveryAddressId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("Catalyte.Apparel.Data.Model.LineItem", b =>
                {
                    b.HasOne("Catalyte.Apparel.Data.Model.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Catalyte.Apparel.Data.Model.Purchase", "Purchase")
                        .WithMany("LineItems")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("Catalyte.Apparel.Data.Model.Purchase", b =>
                {
                    b.HasOne("Catalyte.Apparel.Data.Model.BillingAddress", "BillingAddress")
                        .WithMany()
                        .HasForeignKey("BillingAddressId");

                    b.HasOne("Catalyte.Apparel.Data.Model.DeliveryAddress", "DeliveryAddress")
                        .WithMany()
                        .HasForeignKey("DeliveryAddressId");

                    b.Navigation("BillingAddress");

                    b.Navigation("DeliveryAddress");
                });

            modelBuilder.Entity("Catalyte.Apparel.Data.Model.Purchase", b =>
                {
                    b.Navigation("LineItems");
                });
#pragma warning restore 612, 618
        }
    }
}
