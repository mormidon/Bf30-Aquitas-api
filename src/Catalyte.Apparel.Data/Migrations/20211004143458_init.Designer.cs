// <auto-generated />
using System;
using Catalyte.Apparel.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Catalyte.Apparel.Data.Migrations
{
    [DbContext(typeof(ApparelCtx))]
    [Migration("20211004143458_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Catalyte.Apparel.Data.Model.LineItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("ProductID");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("integer")
                        .HasColumnName("PurchaseID");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseId");

                    b.ToTable("LineItems");
                });

            modelBuilder.Entity("Catalyte.Apparel.Data.Model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Demographic")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("GlobalProductCode")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PrimaryColorCode")
                        .HasColumnType("text");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SecondaryColorCode")
                        .HasColumnType("text");

                    b.Property<string>("StyleNumber")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = false,
                            Category = "Running",
                            DateCreated = new DateTime(2021, 10, 4, 14, 34, 57, 447, DateTimeKind.Utc).AddTicks(2779),
                            DateModified = new DateTime(2021, 10, 4, 14, 34, 57, 447, DateTimeKind.Utc).AddTicks(3587),
                            Demographic = "Women",
                            GlobalProductCode = "po-AUOXIJI",
                            ReleaseDate = new DateTime(2021, 10, 4, 10, 34, 57, 443, DateTimeKind.Local).AddTicks(8295),
                            StyleNumber = "scILMWK",
                            Type = "Pant"
                        },
                        new
                        {
                            Id = 2,
                            Active = false,
                            Category = "Baseball",
                            DateCreated = new DateTime(2021, 10, 4, 14, 34, 57, 447, DateTimeKind.Utc).AddTicks(4470),
                            DateModified = new DateTime(2021, 10, 4, 14, 34, 57, 447, DateTimeKind.Utc).AddTicks(4473),
                            Demographic = "Men",
                            GlobalProductCode = "po-XRTNXKB",
                            ReleaseDate = new DateTime(2021, 10, 4, 10, 34, 57, 447, DateTimeKind.Local).AddTicks(4399),
                            StyleNumber = "scDKCQC",
                            Type = "Pant"
                        },
                        new
                        {
                            Id = 3,
                            Active = false,
                            Category = "Running",
                            DateCreated = new DateTime(2021, 10, 4, 14, 34, 57, 447, DateTimeKind.Utc).AddTicks(4514),
                            DateModified = new DateTime(2021, 10, 4, 14, 34, 57, 447, DateTimeKind.Utc).AddTicks(4517),
                            Demographic = "Women",
                            GlobalProductCode = "po-FRCLRBY",
                            ReleaseDate = new DateTime(2021, 10, 4, 10, 34, 57, 447, DateTimeKind.Local).AddTicks(4500),
                            StyleNumber = "scMWFKY",
                            Type = "Pant"
                        },
                        new
                        {
                            Id = 4,
                            Active = false,
                            Category = "Baseball",
                            DateCreated = new DateTime(2021, 10, 4, 14, 34, 57, 447, DateTimeKind.Utc).AddTicks(4554),
                            DateModified = new DateTime(2021, 10, 4, 14, 34, 57, 447, DateTimeKind.Utc).AddTicks(4558),
                            Demographic = "Men",
                            GlobalProductCode = "po-XDTUKIT",
                            ReleaseDate = new DateTime(2021, 10, 4, 10, 34, 57, 447, DateTimeKind.Local).AddTicks(4542),
                            StyleNumber = "scRBYEF",
                            Type = "Pant"
                        },
                        new
                        {
                            Id = 5,
                            Active = false,
                            Category = "Football",
                            DateCreated = new DateTime(2021, 10, 4, 14, 34, 57, 447, DateTimeKind.Utc).AddTicks(4579),
                            DateModified = new DateTime(2021, 10, 4, 14, 34, 57, 447, DateTimeKind.Utc).AddTicks(4581),
                            Demographic = "Women",
                            GlobalProductCode = "po-KLHFUPD",
                            ReleaseDate = new DateTime(2021, 10, 4, 10, 34, 57, 447, DateTimeKind.Local).AddTicks(4575),
                            StyleNumber = "scUJLSR",
                            Type = "Pant"
                        },
                        new
                        {
                            Id = 6,
                            Active = false,
                            Category = "Football",
                            DateCreated = new DateTime(2021, 10, 4, 14, 34, 57, 447, DateTimeKind.Utc).AddTicks(4603),
                            DateModified = new DateTime(2021, 10, 4, 14, 34, 57, 447, DateTimeKind.Utc).AddTicks(4605),
                            Demographic = "Men",
                            GlobalProductCode = "po-VNDZQUG",
                            ReleaseDate = new DateTime(2021, 10, 4, 10, 34, 57, 447, DateTimeKind.Local).AddTicks(4599),
                            StyleNumber = "scHIWSG",
                            Type = "Pant"
                        },
                        new
                        {
                            Id = 7,
                            Active = false,
                            Category = "Boxing",
                            DateCreated = new DateTime(2021, 10, 4, 14, 34, 57, 447, DateTimeKind.Utc).AddTicks(4727),
                            DateModified = new DateTime(2021, 10, 4, 14, 34, 57, 447, DateTimeKind.Utc).AddTicks(4728),
                            Demographic = "Women",
                            GlobalProductCode = "po-PEGMNBC",
                            ReleaseDate = new DateTime(2021, 10, 4, 10, 34, 57, 447, DateTimeKind.Local).AddTicks(4716),
                            StyleNumber = "scKYEDE",
                            Type = "Pant"
                        });
                });

            modelBuilder.Entity("Catalyte.Apparel.Data.Model.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BillingCity")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("BillingEmail")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("BillingPhone")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("BillingState")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<string>("BillingStreet")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("BillingStreet2")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("BillingZip")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeliveryCity")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("DeliveryFirstName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("DeliveryLastName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("DeliveryState")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<string>("DeliveryStreet")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("DeliveryStreet2")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("DeliveryZip")
                        .HasMaxLength(10)
                        .HasColumnType("integer");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Purchases");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BillingCity = "Atlanta",
                            BillingEmail = "customer@home.com",
                            BillingPhone = "(714) 345-8765",
                            BillingState = "GA",
                            BillingStreet = "123 Main",
                            BillingStreet2 = "Apt A",
                            BillingZip = "31675",
                            DateCreated = new DateTime(2021, 10, 4, 14, 34, 57, 449, DateTimeKind.Utc).AddTicks(6099),
                            DateModified = new DateTime(2021, 10, 4, 14, 34, 57, 449, DateTimeKind.Utc).AddTicks(6110),
                            DeliveryCity = "Birmingham",
                            DeliveryFirstName = "Max",
                            DeliveryLastName = "Space",
                            DeliveryState = "AL",
                            DeliveryStreet = "123 Hickley",
                            DeliveryZip = 43690,
                            OrderDate = new DateTime(2021, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Catalyte.Apparel.Data.Model.LineItem", b =>
                {
                    b.HasOne("Catalyte.Apparel.Data.Model.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Catalyte.Apparel.Data.Model.Purchase", "Purchase")
                        .WithMany("LineItems")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("Catalyte.Apparel.Data.Model.Purchase", b =>
                {
                    b.Navigation("LineItems");
                });
#pragma warning restore 612, 618
        }
    }
}
